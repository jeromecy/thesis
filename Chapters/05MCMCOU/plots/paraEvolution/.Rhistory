position = "right")+
theme(legend.text = element_text(size=20),
legend.position = "none",
axis.title = element_blank(),
axis.text.y = element_text(size=20))
gg + geom_path(aes(1:length(dat_x),y=dat_x,linetype="Chain"))+
geom_hline(aes(yintercept = x[n],linetype="Xt"),size=1.1)+
geom_hline(aes(yintercept = y[n],linetype="Yt"),size=1.1)+
geom_hline(aes(yintercept=mean(dat_x)+sqrt(mean(dat_sigx)),linetype="Error"),size=1.1) +
geom_hline(aes(yintercept=mean(dat_x)-sqrt(mean(dat_sigx)),linetype="Error"),size=1.1) +
scale_y_continuous(breaks=c(x[n],mean(dat_x)-sqrt(mean(dat_sigx)),mean(dat_x),mean(dat_x)+sqrt(mean(dat_sigx)),y[n]),
labels=c(expression(italic(x[t])),"error",expression(italic(hat(x)[t])),"error",
expression(italic(y[t]))),
position = "right")+
theme(legend.text = element_text(size=20),
legend.position = "none",
axis.title = element_blank(),
axis.text.y = element_text(size=20))
gg + geom_path(aes(1:length(dat_x),y=dat_x,linetype="Chain"))+
geom_hline(aes(yintercept = x[n],linetype="Xt"),size=1.1)+
geom_hline(aes(yintercept = y[n],linetype="Yt"),size=1.1)+
geom_hline(aes(yintercept=mean(dat_x)+sqrt(mean(dat_sigx)),linetype="Error"),size=1.1) +
geom_hline(aes(yintercept=mean(dat_x)-sqrt(mean(dat_sigx)),linetype="Error"),size=1.1) +
scale_y_continuous(breaks=c(x[n],mean(dat_x)-sqrt(mean(dat_sigx)),mean(dat_x),mean(dat_x)+sqrt(mean(dat_sigx)),y[n]),
labels=c(expression(italic(x[t])),"error",expression(italic(hat(x))[t]),"error",
expression(italic(y[t]))),
position = "right")+
theme(legend.text = element_text(size=20),
legend.position = "none",
axis.title = element_blank(),
axis.text.y = element_text(size=20))
gg + geom_path(aes(1:length(dat_x),y=dat_x,linetype="Chain"))+
geom_hline(aes(yintercept = x[n],linetype="Xt"),size=1.1)+
geom_hline(aes(yintercept = y[n],linetype="Yt"),size=1.1)+
geom_hline(aes(yintercept=mean(dat_x)+sqrt(mean(dat_sigx)),linetype="Error"),size=1.1) +
geom_hline(aes(yintercept=mean(dat_x)-sqrt(mean(dat_sigx)),linetype="Error"),size=1.1) +
scale_y_continuous(breaks=c(x[n],mean(dat_x)-sqrt(mean(dat_sigx)),mean(dat_x),mean(dat_x)+sqrt(mean(dat_sigx)),y[n]),
labels=c(expression(italic(x[t])),expression(italic(hat(x)[t])-varepsilon),
expression(italic(hat(x)[t])),"error",
expression(italic(y[t]))),
position = "right")+
theme(legend.text = element_text(size=20),
legend.position = "none",
axis.title = element_blank(),
axis.text.y = element_text(size=20))
gg + geom_path(aes(1:length(dat_x),y=dat_x,linetype="Chain"))+
geom_hline(aes(yintercept = x[n],linetype="Xt"),size=1.1)+
geom_hline(aes(yintercept = y[n],linetype="Yt"),size=1.1)+
geom_hline(aes(yintercept=mean(dat_x)+sqrt(mean(dat_sigx)),linetype="Error"),size=1.1) +
geom_hline(aes(yintercept=mean(dat_x)-sqrt(mean(dat_sigx)),linetype="Error"),size=1.1) +
scale_y_continuous(breaks=c(x[n],mean(dat_x)-sqrt(mean(dat_sigx)),mean(dat_x),mean(dat_x)+sqrt(mean(dat_sigx)),y[n]),
labels=c(expression(italic(x[t])),expression(italic(hat(x)[t])-epsilon),
expression(italic(hat(x)[t])),expression(italic(hat(x)[t])+epsilon),
expression(italic(y[t]))),
position = "right")+
theme(legend.text = element_text(size=20),
legend.position = "none",
axis.title = element_blank(),
axis.text.y = element_text(size=20))
gg + geom_path(aes(1:length(dat_x),y=dat_x,linetype="Chain"))+
geom_hline(aes(yintercept = x[n],linetype="Xt"),size=1.1)+
geom_hline(aes(yintercept = y[n],linetype="Yt"),size=1.1)+
geom_hline(aes(yintercept=mean(dat_x)+sqrt(mean(dat_sigx)),linetype="Error"),size=1.1) +
geom_hline(aes(yintercept=mean(dat_x)-sqrt(mean(dat_sigx)),linetype="Error"),size=1.1) +
scale_y_continuous(breaks=c(x[n],mean(dat_x)-sqrt(mean(dat_sigx)),mean(dat_x),mean(dat_x)+sqrt(mean(dat_sigx)),y[n]),
labels=c(expression(italic(x[t])),expression(italic(hat(x)[t])-epsilon),
expression(italic(hat(x)[t])),expression(italic(hat(x)[t])+epsilon),
expression(italic(y[t]))),
position = "right")+
theme(legend.position = "none",
axis.title = element_blank(),
axis.text.y = element_text(size=30))
noupdata = data.frame(gdat$t[100:149],timecost,acpratio,iat_all,ess_all,theta_all,
xt_all,yt_all,gdat$x[100:149],gdat$mx[100:149],gdat$y[100:149],gdat$my[100:149])
names(noupdata) = c("Tmark","time","a1","a2","iat1","iat2","iat3","iat4","iat5",
"ess1", "ess2", "ess3", "ess4", "ess5",
"gam","xi2","lab2","sig2","tau2","xt","ut",
"yt","vt","rx","ru","ry","rv")
ggnoup = ggplot(noupdata)
ggnoup + geom_point(aes(x=1:nrow(noupdata),y=a1,shape="a1"),size=5) +
geom_point(aes(x=1:nrow(noupdata),y=a2,shape="a2"),size=5) +
ggtitle("Acceptance Rates without Updating Mean")+
xlab("Index")+ylab("Value")+ th +
scale_shape_manual("",values = c(1,2))
qplot(1:nrow(noupdata),1/apply(iat_all,1,mean)/timecost,
main="IAT in Unit Time",xlab="Index",ylab="Value")+th
qplot(1:nrow(noupdata),apply(ess_all,1,mean)/timecost,
main="ESS in Unit Time",xlab="Index",ylab="Value")+th
updata = data.frame(gdat$t[100:149],timecost,acpratio,iat_all,ess_all,theta_all,
xt_all,yt_all,gdat$x[100:149],gdat$mx[100:149],gdat$y[100:149],gdat$my[100:149])
names(updata) = c("Tmark","time","a1","a2","iat1","iat2","iat3","iat4","iat5",
"ess1", "ess2", "ess3", "ess4", "ess5",
"gam","xi2","lab2","sig2","tau2","xt","ut",
"yt","vt","rx","ru","ry","rv")
ggup = ggplot(updata)
ggup + geom_point(aes(x=1:nrow(updata),y=a1,shape="a1"),size=5) +
geom_point(aes(x=1:nrow(updata),y=a2,shape="a2"),size=5) +
ggtitle("Acceptance Rates without Updating Mean")+
xlab("Index")+ylab("Value")+ th +
scale_shape_manual("",values = c(1,2))
qplot(1:nrow(updata),1/apply(iat_all,1,mean)/timecost,
main="IAT in Unit Time",xlab="Index",ylab="Value")+th
qplot(1:nrow(updata),apply(ess_all,1,mean)/timecost,
main="ESS in Unit Time",xlab="Index",ylab="Value")+th
ggnoup + geom_point(aes(x=Tmark,y=xt,shape="Estimation")) +
geom_point(aes(x=Tmark,y=rx,shape="Observation")) +
scale_shape_manual("",values = c(1,2))
tpdat = data.frame(notime=noupdata$time,time=updata$time,noa1=noupdata$a1,a1=updata$a1,
noa2=noupdata$a2,a2=updata$a2,
noiat=apply(noupdata[,5:9],1,mean),iat=apply(updata[,5:9],1,mean),
noess=apply(noupdata[,10:14],1,mean),ess=apply(updata[,10:14],1,mean))
tpgg = ggplot(tpdat,aes(x=1:nrow(tpdat)))
tpgg + geom_point(aes(y=noa1,color="Not-updating"),size=5)+geom_point(aes(y=a1,color="Updating"),size=5)+
geom_line(aes(y=noa1,color="Not-updating"))+geom_line(aes(y=a1,color="Updating")) +
ggtitle(expression("Compare"~alpha[1]~"Between Not-updating and Updating Mean"))+
xlab("Index")+ylab("Value")+ th +
#scale_shape_manual("",values = c(1,2))
scale_color_manual("Methods",values = c("blue","red"))
tpgg + geom_point(aes(y=noa2,color="Not-updating"),size=5)+geom_point(aes(y=a2,color="Updating"),size=5)+
geom_line(aes(y=noa2,color="Not-updating"))+geom_line(aes(y=a2,color="Updating")) +
ggtitle(expression("Compare"~alpha[2]~"Between Not-updating and Updating Mean"))+
xlab("Index")+ylab("Value")+ th +
#scale_shape_manual("",values = c(1,2))
scale_color_manual("Methods",values = c("blue","red"))
tpgg + geom_point(aes(y=1/noiat/notime,color="Not-updating"),size=5)+geom_point(aes(y=1/iat/time,color="Updating"),size=5)+
geom_line(aes(y=1/noiat/notime,color="Not-updating"))+geom_line(aes(y=1/iat/time,color="Updating")) +
ggtitle(expression("Compare EffUT Between Not-updating and Updating Mean"))+
xlab("Index")+ylab("Value")+ th +
#scale_shape_manual("",values = c(1,2))+
scale_color_manual("Methods",values = c("blue","red"))
tpgg + geom_point(aes(y=noess/notime,color="Not-updating"),size=5)+geom_point(aes(y=ess/time,color="Updating"),size=5)+
geom_line(aes(y=noess/notime,color="Not-updating"))+geom_line(aes(y=ess/time,color="Updating")) +
ggtitle(expression("Compare ESSUT Between Not-updating and Updating Mean"))+
xlab("Index")+ylab("Value")+ th +
#scale_shape_manual("",values = c(1,2))
scale_color_manual("Methods",values = c("blue","red"))
head(tpdat)
tpgg = ggplot(tpdat,aes(x=1:nrow(tpdat)))
tpgg + geom_point(aes(y=noa1,color="Not-updating"),size=5)+geom_point(aes(y=a1,color="Updating"),size=5)+
geom_line(aes(y=noa1,color="Not-updating"))+geom_line(aes(y=a1,color="Updating")) +
ggtitle(expression("Compare"~alpha[1]~"Between Not-updating and Updating Mean"))+
xlab("Index")+ylab("Value")+ th +
#scale_shape_manual("",values = c(1,2))
scale_color_manual("Methods",values = c("blue","red"))
tpgg + geom_point(aes(y=noa1,color="Not-updating"),size=5)+
geom_point(aes(y=a1,color="Updating"),size=5)
tpgg + geom_point(aes(y=noa1,color="Not-updating"),size=5)
tpgg + geom_point(aes(y=a1,color="Not-updating"),size=5)
head(tpdat)
noupdata
updata
head(updata)
updata[1,]
noupdata[1,]
load("~/RCode/MCMCdata1017.RData")
noupdata[1,]
updata[1,]
tpdat = data.frame(notime=noupdata$time,time=updata$time,noa1=noupdata$a1,a1=updata$a1,
noa2=noupdata$a2,a2=updata$a2,
noiat=apply(noupdata[,5:9],1,mean),iat=apply(updata[,5:9],1,mean),
noess=apply(noupdata[,10:14],1,mean),ess=apply(updata[,10:14],1,mean))
tpgg = ggplot(tpdat,aes(x=1:nrow(tpdat)))
tpgg + geom_point(aes(y=noa1,color="Not-updating"),size=5)+geom_point(aes(y=a1,color="Updating"),size=5)+
geom_line(aes(y=noa1,color="Not-updating"))+geom_line(aes(y=a1,color="Updating")) +
ggtitle(expression("Compare"~alpha[1]~"Between Not-updating and Updating Mean"))+
xlab("Index")+ylab("Value")+ th +
#scale_shape_manual("",values = c(1,2))
scale_color_manual("Methods",values = c("blue","red"))
tpgg + geom_point(aes(y=noa1,shape="Not-updating"),size=5) +
geom_point(aes(y=a1,shape="Updating"),size=5) +
geom_line(aes(y=noa1,shape="Not-updating")) +
geom_line(aes(y=a1,shape="Updating")) +
theme(axis.title = element_blank())
tpgg + geom_point(aes(y=noa1,shape="Not-updating"),size=5) +
geom_point(aes(y=a1,shape="Updating"),size=5) +
geom_line(aes(y=noa1,shape="Not-updating")) +
geom_line(aes(y=a1,shape="Updating")) +
scale_shape_manual(values=c(1,4)) +
theme(axis.title = element_blank())
tpgg + geom_point(aes(y=noa1,shape="Not-updating"),size=5) +
geom_point(aes(y=a1,shape="Updating"),size=5) +
geom_line(aes(y=noa1,shape="Not-updating")) +
geom_line(aes(y=a1,shape="Updating")) +
scale_shape_manual(values=c(19,20)) +
theme(axis.title = element_blank())
tpgg + geom_point(aes(y=noa1,shape="noa1"),size=5) +
geom_point(aes(y=a1,shape="a1"),size=5) +
geom_line(aes(y=noa1,shape="noa1")) +
geom_line(aes(y=a1,shape="a1")) +
scale_shape_manual(values=c(19,20)) +
theme(axis.title = element_blank())
tpgg + geom_point(aes(y=noa1),shape="noa1",size=5) +
geom_point(aes(y=a1),shape="a1",size=5) +
geom_line(aes(y=noa1),shape="noa1") +
geom_line(aes(y=a1),shape="a1") +
scale_shape_manual(values=c(19,20)) +
theme(axis.title = element_blank())
tpgg + geom_point(aes(y=noa1,shape="noa1"),size=5) +
geom_point(aes(y=a1,shape="a1"),size=5) +
geom_line(aes(y=noa1)) +
geom_line(aes(y=a1)) +
scale_shape_manual(values=c(19,20)) +
theme(axis.title = element_blank())
tpgg + geom_point(aes(y=noa1,shape="noa1"),size=5) +
geom_point(aes(y=a1,shape="a1"),size=5) +
geom_line(aes(y=noa1)) +
geom_line(aes(y=a1)) +
scale_shape_manual(values=c(18,20)) +
theme(axis.title = element_blank())
tpgg + geom_point(aes(y=noa1,shape="noa1"),size=5) +
geom_point(aes(y=a1,shape="a1"),size=5) +
geom_line(aes(y=noa1)) +
geom_line(aes(y=a1)) +
scale_shape_manual(values=c(20,18)) +
theme(axis.title = element_blank(),
legend.position = "none",axis.text.y = element_blank())
tpgg + geom_point(aes(y=noa1,shape="noa1"),size=5) +
geom_point(aes(y=a1,shape="a1"),size=5) +
geom_line(aes(y=noa1)) +
geom_line(aes(y=a1)) +
scale_shape_manual(values=c(20,18)) +
theme(axis.title = element_blank(),
legend.position = "none",axis.text.x = element_blank(),
axis.text.y = element_text(size=20))
them2 = scale_shape_manual(values=c(20,18)) +
theme(axis.title = element_blank(),
legend.position = "none",axis.text.x = element_blank(),
axis.text.y = element_text(size=20))
tpgg + geom_point(aes(y=noa1,shape="noa1"),size=5) +
geom_point(aes(y=a1,shape="a1"),size=5) +
geom_line(aes(y=noa1)) +
geom_line(aes(y=a1)) + them2
tpgg + geom_point(aes(y=noa1,shape="noa1"),size=5) +
geom_point(aes(y=a1,shape="a1"),size=5) +
geom_line(aes(y=noa1)) +
geom_line(aes(y=a1)) + scale_shape_manual(values=c(20,18)) +
theme(axis.title = element_blank(),
legend.position = "none",axis.text.x = element_blank(),
axis.text.y = element_text(size=20))
tpgg + geom_point(aes(y=noa2,shape="noa2"),size=5) +
geom_point(aes(y=a2,shape="a2"),size=5) +
geom_line(aes(y=noa2)) +
geom_line(aes(y=a2)) + scale_shape_manual(values=c(20,18)) +
theme(axis.title = element_blank(),
legend.position = "none",axis.text.x = element_blank(),
axis.text.y = element_text(size=20))
tpgg + geom_point(aes(y=noa1,shape="n"),size=5) +
geom_point(aes(y=a1,shape="u"),size=5) +
geom_line(aes(y=noa1)) +
geom_line(aes(y=a1))
tpgg + geom_point(aes(y=noa1,shape="n"),size=5) +
geom_point(aes(y=a1,shape="u"),size=5)
tpgg + geom_point(aes(y=noa1,shape="noa1"),size=5) +
geom_point(aes(y=a1,shape="a1"),size=5) +
geom_line(aes(y=noa1)) +
geom_line(aes(y=a1)) + scale_shape_manual(values=c("n","u")) +
theme(axis.title = element_blank(),
legend.position = "none",axis.text.x = element_blank(),
axis.text.y = element_text(size=20))
tpgg + geom_point(aes(y=noa1,shape="noa1"),size=5) +
geom_point(aes(y=a1,shape="a1"),size=5) +
geom_line(aes(y=noa1)) +
geom_line(aes(y=a1)) + scale_shape_manual(values=c(20,18)) +
theme(axis.title = element_blank(),
legend.position = "none",axis.text.x = element_blank(),
axis.text.y = element_text(size=20))
tpgg + geom_point(aes(y=noa2,shape="noa2"),size=5) +
geom_point(aes(y=a2,shape="a2"),size=5) +
geom_line(aes(y=noa2)) +
geom_line(aes(y=a2)) + scale_shape_manual(values=c(20,18)) +
theme(axis.title = element_blank(),
legend.position = "none",axis.text.x = element_blank(),
axis.text.y = element_text(size=20))
tpgg + geom_point(aes(y=noa2,shape="noa2"),size=5) +
geom_point(aes(y=a2,shape="a2"),size=5) +
geom_line(aes(y=noa2)) +
geom_line(aes(y=a2)) + scale_shape_manual(values=c(2,18)) +
theme(axis.title = element_blank(),
legend.position = "none",axis.text.x = element_blank(),
axis.text.y = element_text(size=20))
tpgg + geom_point(aes(y=noa1,shape="noa1"),size=5) +
geom_point(aes(y=a1,shape="a1"),size=5) +
geom_line(aes(y=noa1)) +
geom_line(aes(y=a1)) + scale_shape_manual(values=c(2,18)) +
theme(axis.title = element_blank(),
legend.position = "none",axis.text.x = element_blank(),
axis.text.y = element_text(size=20))
tpgg + geom_point(aes(y=1/noiat/notime,shape="Not-updating"),size=5)+
geom_point(aes(y=1/iat/time,shape="Updating"),size=5)+
geom_line(aes(y=1/noiat/notime))+
geom_line(aes(y=1/iat/time)) +scale_shape_manual(values=c(2,18)) +
theme(axis.title = element_blank(),
legend.position = "none",axis.text.x = element_blank(),
axis.text.y = element_text(size=20))
tpgg + geom_point(aes(y=noess/notime,shape="Not-updating"),size=5)+
geom_point(aes(y=ess/time,shape="Updating"),size=5)+
geom_line(aes(y=noess/notime))+
geom_line(aes(y=ess/time)) +scale_shape_manual(values=c(2,18)) +
theme(axis.title = element_blank(),
legend.position = "none",axis.text.x = element_blank(),
axis.text.y = element_text(size=20))
tpgg + geom_point(aes(y=noess/notime,shape="Not-updating"),size=5)+
geom_point(aes(y=ess/time,shape="Updating"),size=5)+
geom_line(aes(y=noess/notime))+
geom_line(aes(y=ess/time)) +scale_shape_manual(values=c(20,17)) +
theme(axis.title = element_blank(),
legend.position = "none",axis.text.x = element_blank(),
axis.text.y = element_text(size=20))
tpgg + geom_point(aes(y=noa1,shape="noa1"),size=5) +
geom_point(aes(y=a1,shape="a1"),size=5) +
geom_line(aes(y=noa1)) +
geom_line(aes(y=a1)) + scale_shape_manual(values=c(20,17)) +
theme(axis.title = element_blank(),
legend.position = "none",axis.text.x = element_blank(),
axis.text.y = element_text(size=20))
tpgg + geom_point(aes(y=noa2,shape="noa2"),size=5) +
geom_point(aes(y=a2,shape="a2"),size=5) +
geom_line(aes(y=noa2)) +
geom_line(aes(y=a2)) + scale_shape_manual(values=c(20,17)) +
theme(axis.title = element_blank(),
legend.position = "none",axis.text.x = element_blank(),
axis.text.y = element_text(size=20))
tpgg + geom_point(aes(y=1/noiat/notime,shape="Not-updating"),size=5)+
geom_point(aes(y=1/iat/time,shape="Updating"),size=5)+
geom_line(aes(y=1/noiat/notime))+
geom_line(aes(y=1/iat/time)) +scale_shape_manual(values=c(20,17)) +
theme(axis.title = element_blank(),
legend.position = "none",axis.text.x = element_blank(),
axis.text.y = element_text(size=20))
tpgg + geom_point(aes(y=noess/notime,shape="Not-updating"),size=5)+
geom_point(aes(y=ess/time,shape="Updating"),size=5)+
geom_line(aes(y=noess/notime))+
geom_line(aes(y=ess/time)) +scale_shape_manual(values=c(20,17)) +
theme(axis.title = element_blank(),
legend.position = "none",axis.text.x = element_blank(),
axis.text.y = element_text(size=20))
codat = data.frame(dat_cor[ck,,])
colnames(codat)=""
rownames(codat)=c("Gam", "Xi2", "Lab2", "Sig2", "Tau2")
#corrplot(as.matrix(codat),main=paste("Parameter Evolution at the ",
#                                     ck,"th Estimation"),mar = c(1,1,1,1),method="ellipse")
corrplot.mixed(as.matrix(codat),main=paste("Parameter Evolution at the ",
ck,"th Estimation"),mar = c(1,1,1,1),lower="number",upper = "ellipse",number.cex=2)
library(corrplot)
corrplot.mixed(as.matrix(codat),main=paste("Parameter Evolution at the ",
ck,"th Estimation"),mar = c(1,1,1,1),lower="number",upper = "ellipse",number.cex=2)
corrplot.mixed(as.matrix(codat),main=paste(ck,"th Estimation"),
mar = c(1,1,1,1),lower="number",
upper = "ellipse",number.cex=2)
corrplot.mixed(as.matrix(codat),main=paste("The",ck,"th Iteration"),
mar = c(1,1,1,1),lower="number",
upper = "ellipse",number.cex=2)
getwd()
setwd("C:/Users/zcao/Documents/RCode/eve")
for(ck in 1:50){
pdf(file=paste("corMatrix",ck,".pdf",sep=""))
codat = data.frame(dat_cor[ck,,])
colnames(codat)=""
rownames(codat)=c("Gam", "Xi2", "Lab2", "Sig2", "Tau2")
#corrplot(as.matrix(codat),main=paste("Parameter Evolution at the ",
#                                     ck,"th Estimation"),mar = c(1,1,1,1),method="ellipse")
# corrplot.mixed(as.matrix(codat),main=paste("Parameter Evolution at the ",
#      ck,"th Estimation"),mar = c(1,1,1,1),lower="number",upper = "ellipse",number.cex=2)
corrplot.mixed(as.matrix(codat),main=paste("The",ck,"th Iteration"),
mar = c(1,1,1,1),lower="number",
upper = "ellipse",number.cex=2)
dev.off()
}
setwd("C:/Users/zcao/Documents/RCode/eve")
corrplot.mixed(as.matrix(codat),main=paste("The",ck,"th Iteration"),
lower="number",
upper = "ellipse",number.cex=2)
for(ck in 1:50){
pdf(file=paste("corMatrix",ck,".pdf",sep=""))
codat = data.frame(dat_cor[ck,,])
colnames(codat)=""
rownames(codat)=c("Gam", "Xi2", "Lab2", "Sig2", "Tau2")
#corrplot(as.matrix(codat),main=paste("Parameter Evolution at the ",
#                                     ck,"th Estimation"),mar = c(1,1,1,1),method="ellipse")
# corrplot.mixed(as.matrix(codat),main=paste("Parameter Evolution at the ",
#      ck,"th Estimation"),mar = c(1,1,1,1),lower="number",upper = "ellipse",number.cex=2)
corrplot.mixed(as.matrix(codat),main=paste("The",ck,"th Iteration"),
lower="number",
upper = "ellipse",number.cex=2)
dev.off()
}
for(ck in 1:50){
pdf(file=paste("corMatrix",ck,".pdf",sep=""))
codat = data.frame(dat_cor[ck,,])
colnames(codat)=""
rownames(codat)=c("Gam", "Xi2", "Lab2", "Sig2", "Tau2")
#corrplot(as.matrix(codat),main=paste("Parameter Evolution at the ",
#                                     ck,"th Estimation"),mar = c(1,1,1,1),method="ellipse")
# corrplot.mixed(as.matrix(codat),main=paste("Parameter Evolution at the ",
#      ck,"th Estimation"),mar = c(1,1,1,1),lower="number",upper = "ellipse",number.cex=2)
corrplot.mixed(as.matrix(codat),main=paste("The",ck,"th Iteration"),
mar = c(1,1,1,1),lower="number",
upper = "ellipse",number.cex=2)
dev.off()
}
corrplot.mixed(as.matrix(codat),main=paste("The",ck,"th Iteration"),
mar = c(1,1,1,1),lower="number",
upper = "ellipse",number.cex=2)
corrplot.mixed(as.matrix(codat),main=paste("The",ck,"th Iteration"),
mar = c(1,1,0.5,1),lower="number",
upper = "ellipse",number.cex=2)
for(ck in 1:50){
pdf(file=paste("corMatrix",ck,".pdf",sep=""))
codat = data.frame(dat_cor[ck,,])
colnames(codat)=""
rownames(codat)=c("Gam", "Xi2", "Lab2", "Sig2", "Tau2")
#corrplot(as.matrix(codat),main=paste("Parameter Evolution at the ",
#                                     ck,"th Estimation"),mar = c(1,1,1,1),method="ellipse")
# corrplot.mixed(as.matrix(codat),main=paste("Parameter Evolution at the ",
#      ck,"th Estimation"),mar = c(1,1,1,1),lower="number",upper = "ellipse",number.cex=2)
corrplot.mixed(as.matrix(codat),main=paste("The",ck,"th Iteration"),
mar = c(1,1,0.5,1),lower="number",
upper = "ellipse",number.cex=2)
dev.off()
}
for(ck in 1:50){
pdf(file=paste("corMatrix",ck,".pdf",sep=""))
codat = data.frame(dat_cor[ck,,])
colnames(codat)=""
rownames(codat)=c("Gam", "Xi2", "Lab2", "Sig2", "Tau2")
#corrplot(as.matrix(codat),main=paste("Parameter Evolution at the ",
#                                     ck,"th Estimation"),mar = c(1,1,1,1),method="ellipse")
# corrplot.mixed(as.matrix(codat),main=paste("Parameter Evolution at the ",
#      ck,"th Estimation"),mar = c(1,1,1,1),lower="number",upper = "ellipse",number.cex=2)
corrplot.mixed(as.matrix(codat),main=paste("The",ck,"th Iteration"),
mar = c(1,1,-0.5,1),lower="number",
upper = "ellipse",number.cex=2)
dev.off()
}
for(ck in 1:50){
pdf(file=paste("corMatrix",ck,".pdf",sep=""))
codat = data.frame(dat_cor[ck,,])
colnames(codat)=""
rownames(codat)=c("Gam", "Xi2", "Lab2", "Sig2", "Tau2")
#corrplot(as.matrix(codat),main=paste("Parameter Evolution at the ",
#                                     ck,"th Estimation"),mar = c(1,1,1,1),method="ellipse")
# corrplot.mixed(as.matrix(codat),main=paste("Parameter Evolution at the ",
#      ck,"th Estimation"),mar = c(1,1,1,1),lower="number",upper = "ellipse",number.cex=2)
corrplot.mixed(as.matrix(codat),main=paste("The",ck,"th Iteration"),
mar = c(1,1,-0.5,1),lower="number",
upper = "ellipse",number.cex=2)
dev.off()
}
for(ck in 1:50){
pdf(file=paste("corMatrix",ck,".pdf",sep=""))
codat = data.frame(dat_cor[ck,,])
colnames(codat)=""
rownames(codat)=c("Gam", "Xi2", "Lab2", "Sig2", "Tau2")
#corrplot(as.matrix(codat),main=paste("Parameter Evolution at the ",
#                                     ck,"th Estimation"),mar = c(1,1,1,1),method="ellipse")
# corrplot.mixed(as.matrix(codat),main=paste("Parameter Evolution at the ",
#      ck,"th Estimation"),mar = c(1,1,1,1),lower="number",upper = "ellipse",number.cex=2)
corrplot.mixed(as.matrix(codat),main=paste("The",ck,"th Iteration"),
mar = c(1,1,0.1,1),lower="number",
upper = "ellipse",number.cex=2)
dev.off()
}
for(ck in 1:50){
pdf(file=paste("corMatrix",ck,".pdf",sep=""))
codat = data.frame(dat_cor[ck,,])
colnames(codat)=""
rownames(codat)=c("Gam", "Xi2", "Lab2", "Sig2", "Tau2")
#corrplot(as.matrix(codat),main=paste("Parameter Evolution at the ",
#                                     ck,"th Estimation"),mar = c(1,1,1,1),method="ellipse")
# corrplot.mixed(as.matrix(codat),main=paste("Parameter Evolution at the ",
#      ck,"th Estimation"),mar = c(1,1,1,1),lower="number",upper = "ellipse",number.cex=2)
corrplot.mixed(as.matrix(codat),main=paste("The",ck,"th Iteration"),
mar = c(1,1,1.5,1),lower="number",
upper = "ellipse",number.cex=2)
dev.off()
}
corrplot.mixed(as.matrix(codat),main=paste("The",ck,"th Iteration"),
mar = c(1,1,1.5,1),lower="number",
upper = "ellipse",number.cex=2)
corrplot.mixed(as.matrix(codat),main=paste("The",ck,"th Iteration"),
mar = c(1,1,2,1),lower="number",
upper = "ellipse",number.cex=2)
for(ck in 1:50){
pdf(file=paste("corMatrix",ck,".pdf",sep=""))
codat = data.frame(dat_cor[ck,,])
colnames(codat)=""
rownames(codat)=c("Gam", "Xi2", "Lab2", "Sig2", "Tau2")
#corrplot(as.matrix(codat),main=paste("Parameter Evolution at the ",
#                                     ck,"th Estimation"),mar = c(1,1,1,1),method="ellipse")
# corrplot.mixed(as.matrix(codat),main=paste("Parameter Evolution at the ",
#      ck,"th Estimation"),mar = c(1,1,1,1),lower="number",upper = "ellipse",number.cex=2)
corrplot.mixed(as.matrix(codat),main=paste("The",ck,"th Iteration"),
mar = c(1,1,2,1),lower="number",
upper = "ellipse",number.cex=2)
dev.off()
}
for(ck in 1:50){
pdf(file=paste("corMatrix",ck,".pdf",sep=""))
codat = data.frame(dat_cor[ck,,])
colnames(codat)=""
rownames(codat)=c("Gam", "Xi2", "Lab2", "Sig2", "Tau2")
#corrplot(as.matrix(codat),main=paste("Parameter Evolution at the ",
#                                     ck,"th Estimation"),mar = c(1,1,1,1),method="ellipse")
# corrplot.mixed(as.matrix(codat),main=paste("Parameter Evolution at the ",
#      ck,"th Estimation"),mar = c(1,1,1,1),lower="number",upper = "ellipse",number.cex=2)
corrplot.mixed(as.matrix(codat),main=paste("The",ck,"th Iteration"),
mar = c(1,1,1,1),lower="number",
upper = "ellipse",number.cex=2)
dev.off()
}
dim(dat_cor)
dev.off()
